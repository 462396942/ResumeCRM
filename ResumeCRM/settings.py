"""
Django settings for ResumeCRM project.

Generated by 'django-admin startproject' using Django 2.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'j@j36q1e=l7qlu^^eff-8e_g&o!pbgani38a$ng3*l__ag=i$='

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ALLOWED_HOSTS = ["resume.shileizcc.com", "127.0.0.1","192.168.1.233","10.30.0.41","*"]

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'repository',
    'django_celery_beat',
    'Resume',
    'Public',
    'RestAPI',
    'Users',
    'Storage',
    'Solr',
    'Analyse',
    'System',
    'Initialize',
    'Documents',
    'Permission',
    'HttpCode',
    'Test',
    'ViewerJS',
    'Dashboard',
    'Cronjob',
    'Events',
    'Notification',
    'channels',
]

MIDDLEWARE = [

    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ResumeCRM.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'Resume', 'template'), 
            os.path.join(BASE_DIR, 'Public', 'template'), 
            os.path.join(BASE_DIR, 'Users', 'template'), 
            os.path.join(BASE_DIR, 'System', 'template'), 
            os.path.join(BASE_DIR, 'Permission', 'template'), 
            os.path.join(BASE_DIR, 'ViewerJS', 'template'), 
            os.path.join(BASE_DIR, 'HttpCode', 'template'), 
            os.path.join(BASE_DIR, 'Test', 'template'), 
            os.path.join(BASE_DIR, 'Dashboard', 'template'), 
            os.path.join(BASE_DIR, 'Notification', 'template'), 
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ResumeCRM.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv('MYSQL_DATABASE'),
        'USER': os.getenv('MYSQL_USER'),
        'PASSWORD': os.getenv('MYSQL_PASSWORD'),
        'HOST': os.getenv('MYSQL_HOST'),
        # 'HOST': 'mysql',
        'PORT': os.getenv('MYSQL_PORT'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

# USE_TZ = False
USE_TZ = True

APPEND_SLASH = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'Resume', 'static'),
    os.path.join(BASE_DIR, 'Public', 'static'),
    os.path.join(BASE_DIR, 'Users', 'static'),
    os.path.join(BASE_DIR, 'System', 'static'),
    os.path.join(BASE_DIR, 'Permission', 'static'),
    os.path.join(BASE_DIR, 'ViewerJS', 'static'),
    os.path.join(BASE_DIR, 'Dashboard', 'static'),
    os.path.join(BASE_DIR, 'static'),
)
# ******************************************************************************************************************************
# Channels
ASGI_APPLICATION = "Notification.routing.application"
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("results", 6379)],
        },
    },
}

# ******************************************************************************************************************************
# 如果用户未登录则跳转链接为
LOGIN_URL = "/user/login"
# ******************************************************************************************************************************
# Nginx_Upload
NGINX_MIRROR_ADDRESS = "http://10.30.0.41"
# NGINX_MIRROR_ADDRESS = "http://192.168.1.6"
NGINX_UPLOAD_ADDRESS = os.path.join(NGINX_MIRROR_ADDRESS, "upload")
# ******************************************************************************************************************************
# Transcode PDF
TRANSCODE_PDF_ADDRESS = "http://10.30.0.41:8089/api/v1/file/pdf"
# TRANSCODE_PDF_ADDRESS = "http://192.168.1.6:8089/api/v1/file/pdf"
# ******************************************************************************************************************************

# 是否开启权限，用于调试
CLOSE_PERMISSION = True

# 自定义 UserProfile
AUTH_USER_MODEL = 'repository.UserProfile'

# ******************************************************************************************************************************
# Solr 地址
# SOLR_SERVER_URL = 'http://127.0.0.1:8983/'
SOLR_SERVER_URL = os.getenv('SOLR_SERVER_URL')
# ******************************************************************************************************************************
# celery
CELERY_BROKER_URL = 'amqp://resume:resume@broker:5672/resume'
# CELERY_BROKER_URL = 'redis://10.30.0.41:6379/0'
CELERY_RESULT_BACKEND = 'redis://results:6379/0'

## celery redis
# CELERY_REDIS_DB = ""
# CELERY_REDIS_HOST = ""
# CELERY_REDIS_PASSWORD = ""
# CELERY_REDIS_PORT = ""

# ******************************************************************************************************************************
# CORS Configuration
CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_ALLOW_ALL = True

CORS_ORIGIN_WHITELIST = ('*')
# CORS_ORIGIN_REGEX_WHITELIST = (r'^(http|https)?://(w+.)?***.com$',)

CORS_ALLOW_METHODS = (
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
    'VIEW',
)

from corsheaders.defaults import default_headers

CORS_ALLOW_HEADERS = default_headers + (
    'XMLHttpRequest',
    'X_FILENAME',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'Pragma',
    'Range',
)
CORS_EXPOSE_HEADERS= [
    'Accept-Ranges',
    'Content-Encoding',
    'Content-Length',
    'Content-Range',
]
# ******************************************************************************************************************************
