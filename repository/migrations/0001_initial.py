# Generated by Django 2.0.7 on 2018-08-15 06:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('uuid', models.CharField(max_length=128, verbose_name='识别码')),
                ('name', models.CharField(max_length=64, verbose_name='姓名')),
                ('head_portrait', models.CharField(default='profile-photos/system/1.png', max_length=64, verbose_name='头像')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('phone', models.CharField(blank=True, max_length=64, null=True, verbose_name='联系电话')),
                ('location', models.CharField(blank=True, default='CN', max_length=64, null=True, verbose_name='国家')),
                ('describe', models.TextField(blank=True, default=None, null=True, verbose_name='备注')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=128, verbose_name='识别码')),
                ('describe', models.TextField(blank=True, null=True, verbose_name='评论')),
                ('create_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='创建时间')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cuu', to=settings.AUTH_USER_MODEL, verbose_name='创建人员')),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=128, verbose_name='识别码')),
                ('name', models.CharField(max_length=32, verbose_name='公司名称')),
                ('level', models.CharField(max_length=32, verbose_name='公司级别')),
            ],
        ),
        migrations.CreateModel(
            name='ComprehensiveAbility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=128, verbose_name='识别码')),
                ('describe', models.TextField(blank=True, null=True, verbose_name='综合能力')),
            ],
        ),
        migrations.CreateModel(
            name='CustomLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=128, verbose_name='识别码')),
                ('name', models.CharField(blank=True, max_length=32, null=True, verbose_name='标签')),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=128, verbose_name='识别码')),
                ('name', models.CharField(max_length=32, verbose_name='部门名称')),
                ('head', models.CharField(max_length=32, verbose_name='部门负责人')),
                ('mail', models.EmailField(max_length=254, verbose_name='邮件地址')),
                ('phone', models.SmallIntegerField(verbose_name='联系电话')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='c', to='repository.Company', verbose_name='所属公司')),
            ],
        ),
        migrations.CreateModel(
            name='EducationInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=128, verbose_name='识别码')),
                ('describe', models.TextField(blank=True, null=True, verbose_name='教育简历')),
                ('level', models.CharField(blank=True, max_length=16, null=True, verbose_name='级别')),
            ],
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=32, null=True, unique=True, verbose_name='名称')),
                ('form_address', models.EmailField(blank=True, max_length=254, null=True, verbose_name='发件人地址')),
                ('form_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='发件人名称')),
                ('smtp_server', models.CharField(blank=True, max_length=32, null=True, verbose_name='SMTP 服务器地址')),
                ('smtp_port', models.CharField(blank=True, max_length=5, null=True, verbose_name='SMTP 服务器端口')),
                ('smtp_username', models.CharField(blank=True, max_length=32, null=True, verbose_name='用户名')),
                ('smtp_password', models.CharField(blank=True, max_length=32, null=True, verbose_name='密码')),
                ('smtp_ssl', models.BooleanField(default=True, verbose_name='开启 SSL')),
                ('uuid', models.CharField(max_length=128, verbose_name='识别码')),
            ],
        ),
        migrations.CreateModel(
            name='EventLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=128, verbose_name='识别码')),
                ('label', models.CharField(max_length=64, verbose_name='标签')),
                ('trigger_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='时间')),
                ('request', models.TextField(blank=True, null=True, verbose_name='请求对象')),
                ('response', models.TextField(blank=True, null=True, verbose_name='响应对象')),
                ('status', models.SmallIntegerField(choices=[(0, '失联'), (1, '成功'), (2, '失败'), (3, '警告'), (4, '进行'), (5, '暂停')], default=1, verbose_name='状态')),
                ('describe', models.TextField(blank=True, null=True, verbose_name='描述')),
                ('access', models.CharField(blank=True, max_length=84, null=True, verbose_name='访问信息')),
                ('source_object', models.CharField(blank=True, max_length=128, null=True, verbose_name='源对象')),
                ('target_object', models.CharField(blank=True, max_length=128, null=True, verbose_name='目标对象')),
            ],
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=128, verbose_name='识别码')),
                ('describe', models.CharField(blank=True, max_length=256, null=True, verbose_name='关键字')),
                ('level', models.SmallIntegerField(blank=True, null=True, verbose_name='级别')),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('uuid', models.CharField(max_length=128, verbose_name='识别码')),
                ('url_type', models.SmallIntegerField(choices=[(0, 'absolute'), (1, 'dynamic')], default=1)),
                ('url_name', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='PersonalAssessment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=128, verbose_name='识别码')),
                ('describe', models.TextField(blank=True, null=True, verbose_name='个人介绍')),
                ('level', models.CharField(blank=True, max_length=16, null=True, verbose_name='级别')),
            ],
        ),
        migrations.CreateModel(
            name='PositionInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=128, verbose_name='识别码')),
                ('personnel_type', models.BooleanField(default=True, verbose_name='正式人员')),
                ('onsite', models.BooleanField(default=False, verbose_name='Onsite')),
                ('on_business_trip', models.BooleanField(default=False, verbose_name='出差')),
                ('equipped_computer', models.BooleanField(default=True, verbose_name='配备电脑')),
                ('create_at', models.DateField(null=True, verbose_name='需求提交日期')),
                ('apply_information', models.CharField(max_length=16, verbose_name='应聘原因')),
                ('jobs', models.CharField(max_length=32, verbose_name='岗位名称')),
                ('personnel_attr', models.CharField(blank=True, max_length=32, null=True, verbose_name='人员属性')),
                ('work_time', models.CharField(max_length=32, verbose_name='工作年限')),
                ('position_requirements', models.CharField(blank=True, max_length=128, null=True, verbose_name='岗位需求信息')),
                ('search_key', models.CharField(blank=True, max_length=32, null=True, verbose_name='岗位关键字')),
                ('jobs_highlight', models.CharField(blank=True, max_length=32, null=True, verbose_name='岗位亮点')),
                ('project_size', models.CharField(blank=True, max_length=32, null=True, verbose_name='岗位规模')),
                ('referral_bonus', models.CharField(blank=True, max_length=32, null=True, verbose_name='推荐奖金')),
                ('customers', models.CharField(blank=True, max_length=16, null=True, verbose_name='客户介绍')),
                ('describe', models.CharField(blank=True, max_length=256, null=True, verbose_name='备注')),
                ('salary', models.CharField(max_length=32, verbose_name='薪资范围')),
                ('number', models.SmallIntegerField(verbose_name='需求人数')),
                ('personnel_costs', models.SmallIntegerField(choices=[(1, 'A1'), (2, 'B1'), (3, 'C1')], default=3, verbose_name='人员成本类型')),
                ('degree', models.SmallIntegerField(choices=[(1, '专科'), (2, '本科'), (3, '研究生'), (4, '硕士'), (5, '博士以上'), (6, '不限')], default=1, verbose_name='学历要求')),
                ('joblevel', models.SmallIntegerField(choices=[(1, '低'), (2, '中'), (3, '高')], default=1, verbose_name='岗位级别')),
                ('state', models.SmallIntegerField(choices=[(1, '不紧急'), (2, '正常'), (3, '紧急')], default=2, verbose_name='紧急程度')),
            ],
        ),
        migrations.CreateModel(
            name='PreferreEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=128, verbose_name='识别码')),
                ('name', models.CharField(blank=True, max_length=32, null=True, unique=True, verbose_name='名称')),
                ('email_server', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pfe', to='repository.Email', unique=True, verbose_name='SMTP服务')),
            ],
        ),
        migrations.CreateModel(
            name='PreferreResumeTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=128, verbose_name='识别码')),
                ('name', models.CharField(blank=True, max_length=32, null=True, unique=True, verbose_name='名称')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=128, verbose_name='识别码')),
                ('name', models.CharField(max_length=32, verbose_name='项目名称')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='d', to='repository.Department', verbose_name='所属部门')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=128, verbose_name='识别码')),
                ('describe', models.TextField(verbose_name='项目简历')),
                ('level', models.CharField(blank=True, max_length=16, null=True, verbose_name='级别')),
            ],
        ),
        migrations.CreateModel(
            name='ResumeInfo',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('age', models.SmallIntegerField(blank=True, null=True, verbose_name='年龄')),
                ('phone', models.CharField(blank=True, max_length=32, null=True, verbose_name='手机号')),
                ('qq', models.CharField(blank=True, max_length=32, null=True, verbose_name='QQ 号')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='出生日期')),
                ('create_time', models.DateTimeField(blank=True, null=True, verbose_name='上传时间')),
                ('cnterview_time', models.DateTimeField(blank=True, null=True, verbose_name='约谈时间')),
                ('modify_time', models.DateTimeField(blank=True, null=True, verbose_name='修改时间')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='电子邮箱')),
                ('uuid', models.CharField(max_length=128, verbose_name='识别码')),
                ('nation', models.CharField(blank=True, max_length=8, null=True, verbose_name='民族')),
                ('track_progress', models.CharField(blank=True, max_length=32, null=True, verbose_name='跟踪进度')),
                ('work_place', models.CharField(blank=True, max_length=32, null=True, verbose_name='期望工作地')),
                ('username', models.CharField(max_length=32, verbose_name='姓名')),
                ('work_time', models.CharField(blank=True, max_length=32, null=True, verbose_name='工作年限')),
                ('place_residence', models.CharField(blank=True, max_length=32, null=True, verbose_name='居住地')),
                ('origin', models.CharField(blank=True, max_length=32, null=True, verbose_name='籍贯')),
                ('jobs', models.CharField(blank=True, max_length=32, null=True, verbose_name='应聘岗位')),
                ('salary', models.CharField(blank=True, max_length=32, null=True, verbose_name='薪酬')),
                ('english_level', models.CharField(blank=True, max_length=32, null=True, verbose_name='英语水平')),
                ('degree', models.CharField(blank=True, max_length=32, null=True, verbose_name='学历')),
                ('graduated_school', models.CharField(blank=True, max_length=32, null=True, verbose_name='毕业学校')),
                ('professional', models.CharField(blank=True, max_length=32, null=True, verbose_name='所学专业')),
                ('learning_type', models.CharField(blank=True, max_length=32, null=True, verbose_name='在校形式')),
                ('duty_time', models.CharField(blank=True, max_length=32, null=True, verbose_name='到岗时间')),
                ('job_addr', models.CharField(blank=True, max_length=32, null=True, verbose_name='求职地点')),
                ('high', models.CharField(blank=True, max_length=32, null=True, verbose_name='身高')),
                ('old_company', models.CharField(blank=True, max_length=32, null=True, verbose_name='上家公司名称')),
                ('old_jobs', models.CharField(blank=True, max_length=32, null=True, verbose_name='上家职位名称')),
                ('language', models.CharField(blank=True, max_length=32, null=True, verbose_name='语言')),
                ('gender', models.BooleanField(default=True, verbose_name='性别')),
                ('current_situation', models.BooleanField(default=True, verbose_name='是否离职')),
                ('nature_work', models.BooleanField(default=True, verbose_name='是否全职')),
                ('marital_status', models.BooleanField(default=False, verbose_name='已婚')),
                ('resume_status', models.SmallIntegerField(choices=[(0, '已面试'), (1, '已复试'), (2, '已录用'), (3, '未联系')], default=3, verbose_name='状态')),
                ('agent', models.ManyToManyField(blank=True, related_name='at', to=settings.AUTH_USER_MODEL, verbose_name='经办人')),
                ('comprehensive_ability', models.ManyToManyField(blank=True, related_name='ceay', to='repository.ComprehensiveAbility', verbose_name='综合能力')),
                ('custom_label', models.ManyToManyField(blank=True, related_name='cll', to='repository.CustomLabel', verbose_name='标签')),
                ('education_info', models.ManyToManyField(blank=True, related_name='ei', to='repository.EducationInfo', verbose_name='教育简历')),
            ],
        ),
        migrations.CreateModel(
            name='ResumeName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=128, verbose_name='识别码')),
                ('name', models.CharField(blank=True, max_length=128, null=True, verbose_name='简历名称')),
                ('create_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='上传时间')),
                ('download_num', models.SmallIntegerField(blank=True, null=True, verbose_name='下载次数')),
            ],
        ),
        migrations.CreateModel(
            name='ResumeSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=128, verbose_name='识别码')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='简历来源')),
            ],
        ),
        migrations.CreateModel(
            name='ResumeSourceText',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('uuid', models.CharField(max_length=128, verbose_name='识别码')),
                ('describe', models.TextField(blank=True, null=True, verbose_name='简历原文')),
            ],
        ),
        migrations.CreateModel(
            name='ResumeStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=128, verbose_name='识别码')),
                ('status', models.TextField(blank=True, null=True, verbose_name='简历状态')),
            ],
        ),
        migrations.CreateModel(
            name='ResumeSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=128, verbose_name='识别码')),
                ('number', models.IntegerField(default=1, verbose_name='数量')),
                ('trigger_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='收藏时间')),
                ('status', models.BooleanField(default=True, verbose_name='收藏状态')),
                ('resume', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rspresume', to='repository.ResumeInfo', verbose_name='简历')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rspuser', to=settings.AUTH_USER_MODEL, verbose_name='收藏人员')),
            ],
        ),
        migrations.CreateModel(
            name='ResumeTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=128, verbose_name='识别码')),
                ('name', models.CharField(blank=True, max_length=32, null=True, unique=True, verbose_name='名称')),
                ('url', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='地址')),
            ],
        ),
        migrations.CreateModel(
            name='ResumeWorkFlow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=128, verbose_name='识别码')),
                ('status', models.TextField(blank=True, null=True, verbose_name='简历工作流')),
            ],
        ),
        migrations.CreateModel(
            name='StatisticalDownloadResume',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(default=1, verbose_name='下载次数')),
                ('download_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='下载时间')),
                ('download_type', models.SmallIntegerField(choices=[(0, '原件'), (1, 'PDF'), (2, '模板')], default=0, verbose_name='下载类型')),
                ('resume', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sdrr', to='repository.ResumeInfo', verbose_name='简历信息')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sdru', to=settings.AUTH_USER_MODEL, verbose_name='下载人员')),
            ],
        ),
        migrations.CreateModel(
            name='StoredEventType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=128, verbose_name='识别码')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='Name')),
            ],
        ),
        migrations.CreateModel(
            name='SystemPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=128, verbose_name='识别码')),
                ('per_method', models.SmallIntegerField(choices=[(1, 'GET'), (2, 'POST'), (3, '*')], default=1, verbose_name='请求方法')),
                ('argument_list', models.TextField(blank=True, default='*', help_text='JSON 格式数据，多个参数之间用英文半角逗号隔开, ex: {"_page": "", "_so": ""..}', null=True, verbose_name='参数列表')),
                ('describe', models.CharField(blank=True, max_length=255, null=True, verbose_name='描述')),
                ('name', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='权限名称')),
                ('permissions', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cgp', to='auth.Permission', unique=True, verbose_name='permissions')),
                ('url', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='murl', to='repository.Menu', verbose_name='meuns')),
            ],
        ),
        migrations.CreateModel(
            name='SystemSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=128, verbose_name='识别码')),
                ('name', models.CharField(blank=True, max_length=32, null=True, unique=True, verbose_name='名称')),
                ('string_value', models.CharField(blank=True, max_length=128, null=True, unique=True, verbose_name='字符串值')),
                ('num_value', models.IntegerField(blank=True, null=True, unique=True, verbose_name='数字值')),
                ('bool_value', models.BooleanField(default=True, verbose_name='布尔值')),
                ('describe', models.TextField(blank=True, null=True, verbose_name='描述')),
            ],
        ),
        migrations.CreateModel(
            name='WorkInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=128, verbose_name='识别码')),
                ('describe', models.TextField(blank=True, null=True, verbose_name='工作简历')),
                ('level', models.CharField(blank=True, max_length=16, null=True, verbose_name='级别')),
            ],
        ),
        migrations.CreateModel(
            name='WorkPlace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=128, verbose_name='识别码')),
                ('name', models.CharField(max_length=32, verbose_name='工作地点')),
            ],
        ),
        migrations.AddField(
            model_name='resumename',
            name='source',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='repository.ResumeSource', verbose_name='简历来源'),
        ),
        migrations.AddField(
            model_name='resumeinfo',
            name='en_filename',
            field=models.ManyToManyField(blank=True, related_name='efne', to='repository.ResumeName', verbose_name='英文简历'),
        ),
        migrations.AddField(
            model_name='resumeinfo',
            name='personal_assessment',
            field=models.ManyToManyField(blank=True, related_name='pa', to='repository.PersonalAssessment', verbose_name='个人评价'),
        ),
        migrations.AddField(
            model_name='resumeinfo',
            name='project_info',
            field=models.ManyToManyField(blank=True, related_name='pi', to='repository.ProjectInfo', verbose_name='项目简历'),
        ),
        migrations.AddField(
            model_name='resumeinfo',
            name='raw_text',
            field=models.ManyToManyField(blank=True, related_name='rt', to='repository.ResumeSourceText', verbose_name='原文'),
        ),
        migrations.AddField(
            model_name='resumeinfo',
            name='resume_associated',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='repository.ResumeInfo', verbose_name='关联 ID'),
        ),
        migrations.AddField(
            model_name='resumeinfo',
            name='resume_source',
            field=models.ManyToManyField(blank=True, related_name='rse', to='repository.ResumeSource', verbose_name='简历来源'),
        ),
        migrations.AddField(
            model_name='resumeinfo',
            name='search_key',
            field=models.ManyToManyField(blank=True, related_name='sk', to='repository.Keyword', verbose_name='关键字'),
        ),
        migrations.AddField(
            model_name='resumeinfo',
            name='status',
            field=models.ManyToManyField(blank=True, related_name='sts', to='repository.ResumeStatus', verbose_name='状态'),
        ),
        migrations.AddField(
            model_name='resumeinfo',
            name='upload_user',
            field=models.ManyToManyField(blank=True, related_name='uu', to=settings.AUTH_USER_MODEL, verbose_name='上传人员'),
        ),
        migrations.AddField(
            model_name='resumeinfo',
            name='user_comments',
            field=models.ManyToManyField(blank=True, related_name='cts', to='repository.Comment', verbose_name='评论'),
        ),
        migrations.AddField(
            model_name='resumeinfo',
            name='work_info',
            field=models.ManyToManyField(blank=True, related_name='wi', to='repository.WorkInfo', verbose_name='工作简历'),
        ),
        migrations.AddField(
            model_name='resumeinfo',
            name='workflow',
            field=models.ManyToManyField(blank=True, related_name='wf', to='repository.ResumeWorkFlow', verbose_name='流程状态'),
        ),
        migrations.AddField(
            model_name='resumeinfo',
            name='zh_filename',
            field=models.ManyToManyField(blank=True, related_name='fne', to='repository.ResumeName', verbose_name='中文简历'),
        ),
        migrations.AddField(
            model_name='preferreresumetemplate',
            name='resume_template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prt', to='repository.ResumeTemplate', unique=True, verbose_name='简历模板'),
        ),
        migrations.AddField(
            model_name='positioninfo',
            name='candidate',
            field=models.ManyToManyField(related_name='cc', to='repository.ResumeInfo', verbose_name='候选人'),
        ),
        migrations.AddField(
            model_name='positioninfo',
            name='customer_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cid', to='repository.Company', verbose_name='客户编号'),
        ),
        migrations.AddField(
            model_name='positioninfo',
            name='customer_level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cl', to='repository.Company', verbose_name='客户级别'),
        ),
        migrations.AddField(
            model_name='positioninfo',
            name='customer_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cn', to='repository.Company', verbose_name='客户名称'),
        ),
        migrations.AddField(
            model_name='positioninfo',
            name='department_demand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dd', to='repository.Department', verbose_name='需求部门'),
        ),
        migrations.AddField(
            model_name='positioninfo',
            name='department_head',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dh', to='repository.Department', verbose_name='部门负责人'),
        ),
        migrations.AddField(
            model_name='positioninfo',
            name='projects_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pid', to='repository.Project', verbose_name='项目编号'),
        ),
        migrations.AddField(
            model_name='positioninfo',
            name='projects_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pname', to='repository.Project', verbose_name='项目名称'),
        ),
        migrations.AddField(
            model_name='positioninfo',
            name='work_place',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wp', to='repository.WorkPlace', verbose_name='工作地点'),
        ),
        migrations.AlterUniqueTogether(
            name='menu',
            unique_together={('name', 'url_name')},
        ),
        migrations.AddField(
            model_name='eventlog',
            name='event_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='elet', to='repository.StoredEventType', verbose_name='事件类型'),
        ),
        migrations.AddField(
            model_name='eventlog',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='eluser', to=settings.AUTH_USER_MODEL, verbose_name='Role'),
        ),
    ]
